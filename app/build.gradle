apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

def VERSION_CODE = 1
def VERSION_NAME = "0.0.1"
def PACKAGE_NAME = "net.kosen10s.example"
def MIN_SDK_VERSION = 21
def TARGET_SDK_VERSION = 27

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId PACKAGE_NAME
        minSdkVersion MIN_SDK_VERSION
        targetSdkVersion TARGET_SDK_VERSION
        versionCode VERSION_CODE
        versionName VERSION_NAME
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    packagingOptions {
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }
    signingConfigs {
        debug {
            storeFile file("../debug.keystore")
            storePassword "android"
            keyAlias "androiddebugkey"
            keyPassword "android"
        }
        release {
            // TODO: Set Release keystore
            storeFile file("../debug.keystore")
            storePassword "android"
            keyAlias "androiddebugkey"
            keyPassword "android"
        }
    }
    buildTypes {
        debug {
            multiDexEnabled true
            jniDebuggable false
            renderscriptDebuggable false
            applicationIdSuffix ".debug"
            versionNameSuffix ''
            signingConfig signingConfigs.debug
        }
        release {
            minifyEnabled true
            shrinkResources true

            proguardFile getDefaultProguardFile('proguard-android.txt')

            proguardFile file('proguard-rules.pro')

            multiDexEnabled false

            jniDebuggable false
            renderscriptDebuggable false
            signingConfig signingConfigs.release
        }
    }

    flavorDimensions "develop", "staging", "production"
    productFlavors {
        develop {
            dimension "develop"
            applicationId "${PACKAGE_NAME}.develop"
        }
        staging {
            dimension "staging"
            applicationId "${PACKAGE_NAME}.staging"
        }
        production {
            dimension "production"
            applicationId PACKAGE_NAME
        }
    }

    dataBinding {
        enabled = true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "com.android.support:appcompat-v7:${supportPackageVersion}"
    implementation "com.android.support:recyclerview-v7:${supportPackageVersion}"
    implementation 'com.android.support.constraint:constraint-layout:1.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    // TODO: マルチモジュール対応のためdependencies.gradle投入
    implementation 'androidx.core:core-ktx:1.0.0-alpha1'

    // orma
    annotationProcessor 'com.github.gfx.android.orma:orma-processor:4.2.5'
    implementation 'com.github.gfx.android.orma:orma:4.2.5'

    // retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'

    // okhttp
    implementation 'com.squareup.okhttp3:okhttp:3.10.0'

    // permission dispatcher
    implementation("com.github.hotchemi:permissionsdispatcher:3.2.0") {
        // if you don't use android.app.Fragment you can exclude support for them
        exclude module: "support-v13"
    }
    annotationProcessor "com.github.hotchemi:permissionsdispatcher-processor:3.2.0"
}
